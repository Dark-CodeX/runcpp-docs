import{_ as a,o as s,c as e,V as l}from"./chunks/framework.7ae304b1.js";const y=JSON.parse('{"title":"Installation","description":"","frontmatter":{},"headers":[],"relativePath":"guide/installation.md","filePath":"guide/installation.md","lastUpdated":null}'),o={name:"guide/installation.md"},n=l(`<h1 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h1><h2 id="downloading-the-pre-compiled-executable-files" tabindex="-1">Downloading the pre-compiled executable files <a class="header-anchor" href="#downloading-the-pre-compiled-executable-files" aria-label="Permalink to &quot;Downloading the pre-compiled executable files&quot;">​</a></h2><p>To download the pre-compiled executable files, you can visit <a href="https://github.com/Dark-CodeX/runcpp/releases" target="_blank" rel="noreferrer">release page</a>.</p><h2 id="building-from-source" tabindex="-1">Building From Source <a class="header-anchor" href="#building-from-source" aria-label="Permalink to &quot;Building From Source&quot;">​</a></h2><ul><li><h3 id="prerequisite" tabindex="-1">Prerequisite <a class="header-anchor" href="#prerequisite" aria-label="Permalink to &quot;Prerequisite&quot;">​</a></h3><ul><li><a href="https://releases.llvm.org/download.html" target="_blank" rel="noreferrer"><code>clang++</code></a> for GNU/Linux and MacOS based operating systems and <a href="https://learn.microsoft.com/en-us/cpp/build/vscpp-step-0-installation" target="_blank" rel="noreferrer"><code>msvc</code></a> for Windows.</li><li><a href="https://github.com/Dark-CodeX/openutils.git" target="_blank" rel="noreferrer"><code>openutils</code></a> library, installation instructions are mentioned on library&#39;s repository.</li><li><a href="https://git-scm.com/downloads" target="_blank" rel="noreferrer"><code>git</code></a> to clone the <code>RUNCPP</code> repository.</li></ul></li><li><h3 id="compiling" tabindex="-1">Compiling <a class="header-anchor" href="#compiling" aria-label="Permalink to &quot;Compiling&quot;">​</a></h3><ul><li>Now, as you don&#39;t have <code>RUNCPP</code> already, you need to first compile it as a simple executable, and then generate an optimized executable. <ul><li><h4 id="gnu-linux-or-macos" tabindex="-1">GNU/Linux or MacOS: <a class="header-anchor" href="#gnu-linux-or-macos" aria-label="Permalink to &quot;GNU/Linux or MacOS:&quot;">​</a></h4><ul><li><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clang++</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./runcpp/src/caller/caller.cc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./runcpp/src/io/io.cc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./runcpp/src/os/os.c</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./runcpp/src/parser/</span><span style="color:#A6ACCD;">*</span><span style="color:#C3E88D;">.cc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./runcpp/src/main/main.cc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./main</span></span></code></pre></div></li><li>After above commands are executed your optimized <code>RUNCPP</code> executable is ready-to-use, and is installed in <code>/usr/bin/runcpp</code>.</li></ul></li><li><h4 id="windows" tabindex="-1">Windows: <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows:&quot;">​</a></h4><ul><li><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cl </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">std:c</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">latest .</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">runcpp</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">src</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">main</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">main.cc .</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">runcpp</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">src</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">caller</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">caller.cc .</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">runcpp</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">src</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">io</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">io.cc .</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">runcpp</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">src</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">os</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">os.c .</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">runcpp</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">src</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">parser</span><span style="color:#89DDFF;">/*</span><span style="color:#A6ACCD;">.cc</span></span>
<span class="line"><span style="color:#A6ACCD;">.</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">main</span></span></code></pre></div></li><li>Now, an optimized executable file is created with name of <code>runcpp.exe</code> in <code>bin</code> directory.</li></ul></li></ul></li></ul></li></ul>`,5),r=[n];function t(p,c,i,d,D,u){return s(),e("div",null,r)}const A=a(o,[["render",t]]);export{y as __pageData,A as default};
